// import { initBuffers } from "./init-buffers.js";
import { Scene } from "./scene.js";


// ############################################################################################
// ############################################################################################
// ############################################################################################

window.addEventListener(
    "load",
    (event) => {
        console.log("starting webgl app");
        startApp();
    }
);

// ############################################################################################
// ############################################################################################
// ############################################################################################

const TAU = 2.0*Math.PI;

// ------------------------------------------------
// ------------------------------------------------
// ------- settings

// just needed to be before the main call?
let fps = 40;
var timeBetweenFrames = 1000.0/fps;
//   0.0 to 1.0:     [   R,   G,   B,   A ]
var canvasClearColour = [ 0.2, 0.2, 0.2, 1.0 ];


// ############################################################################################
// ############################################################################################
// ############################################################################################

var canvas;
var gl;

// ############################################################################################
// ############################################################################################
// ############################################################################################

var oldTime;

var scene;


// ############################################################################################
// ############################################################################################
// ############################################################################################

function getCanvasElement(){
    return document.querySelector("#webgl_canvas_primary");
}

// ############################################################################################
// ############################################################################################
// ############################################################################################


function init_webgl_context(){


    // weird way to grab the canvas element, shouldnt we getElementById?
    canvas = getCanvasElement();
    
    // init the GL context
    gl = canvas.getContext("webgl");
}

function draw( deltaTime ) {


    // function updateScene( gl, programInfo, deltaTime ){
    scene.update( deltaTime );
        
    // function drawScene( gl, programInfo ){
    scene.draw();
}
function frameUpdate( newTime ){
    // ... generate delta time
    const deltaTime = (newTime - oldTime)/1000.0;
    oldTime = newTime;
    draw( deltaTime );
}

// entry point
function startApp() {

    // ======================================================================
    // ======================================================================
    // ======================================================================
    // ======== prepare the canvas stuffs

    init_webgl_context();

    // only continue if webGL is available and working
    if( null === gl ){
        alert(
            "unable to init webGL. your device may not support it"
        );
        return;
    }

    // ======================================================================
    // ======================================================================
    // ======================================================================
    // ======== initialise things
    

    gl.clearColor(canvasClearColour[0], canvasClearColour[1], canvasClearColour[2], canvasClearColour[3]); // clear to black
    gl.clearDepth(1.0); // clear everything

    gl.enable(gl.DEPTH_TEST); // enable depth testing
    gl.depthFunc(gl.LEQUAL); // near things obscure far things

    gl.enable(gl.CULL_FACE);
    gl.cullFace(gl.FRONT);

    scene = new Scene( gl );

    oldTime = Date.now();

    // Flip image pixels into the bottom-to-top order that WebGL expects.
    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);


    // ======================================================================
    // ======================================================================
    // ======================================================================
    // ======== do drawing



    setInterval(
            function () {
                requestAnimationFrame(
                        (t) => frameUpdate( t )
                    );
            },
            timeBetweenFrames
        );


    // ======================================================================
    // ======================================================================
    // ======================================================================
}



// ############################################################################################
// ############################################################################################
// ############################################################################################

